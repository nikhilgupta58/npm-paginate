{"version":3,"file":"main.abe8185b8789b6f47e59.hot-update.js","sources":["webpack:///./src/components/Pagination/Pagination.container.jsx","webpack:///./src/components/Pagination/Pagination.view.jsx","webpack:///./src/components/Pagination/components/Button.jsx","webpack:///./src/components/Pagination/components/NextBtn.jsx","webpack:///./src/components/Pagination/components/PrevBtn.jsx","webpack:///./src/components/Pagination/index.jsx","webpack:///./src/components/Pagination/utils/context.js","webpack:///./src/stories/Pagination.stories.js"],"sourcesContent":["import * as React from \"react\";\nimport PaginationView from \"./Pagination.view\";\nimport { Pagination } from \"./utils/context\";\nexport default function PaginationContainer({ page, setPage, totalPages }) {\n  if (!totalPages || totalPages <= 1) return <></>;\n  const nextPageHandler = () => {\n    handler(page + 1);\n  };\n  const prevPageHandler = () => {\n    handler(page - 1);\n  };\n  const [pageButtons, setPageButtons] = React.useState([]);\n  React.useEffect(() => {\n    if (totalPages > 6) {\n      let arr = [];\n      if (page <= 2) arr = [1, 2, 3, \"...\", totalPages];\n      else if (page >= totalPages - 1)\n        arr = [1, \"...\", totalPages - 2, totalPages - 1, totalPages];\n      else {\n        if (page == 3) arr = [1, 2, 3, 4, \"...\", totalPages];\n        else if (page === totalPages - 2)\n          arr = [\n            1,\n            \"...\",\n            totalPages - 3,\n            totalPages - 2,\n            totalPages - 1,\n            totalPages,\n          ];\n        else {\n          arr = [1, \"...\", page - 1, page, page + 1, \"...\", totalPages];\n        }\n      }\n      setPageButtons(arr);\n    } else {\n      const arr = [];\n      Array.from({ length: totalPages }, (v, i) => i + 1).map((number) => {\n        arr.push(number);\n      });\n      setPageButtons(arr);\n    }\n  }, [page, totalPages]);\n\n  function handler(pageNum) {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n    setPage(pageNum);\n  }\n  return (\n    <Pagination.Provider\n      value={{\n        page: page,\n        setPage: setPage,\n        totalPages: totalPages,\n        nextPageHandler: nextPageHandler,\n        prevPageHandler: prevPageHandler,\n        handler: handler,\n        pageButtons: pageButtons,\n      }}\n    >\n      <PaginationView />\n    </Pagination.Provider>\n  );\n}\n","import * as React from \"react\";\nimport Button from \"./components/Button\";\nimport NextBtn from \"./components/NextBtn\";\nimport PrevBtn from \"./components/PrevBtn\";\nimport { usePaginationContext } from \"./utils/context\";\nexport default function PaginationView() {\n  const {\n    page,\n    totalPages,\n    setPage,\n    handler,\n    nextPageHandler,\n    prevPageHandler,\n    pageButtons,\n  } = usePaginationContext();\n  return (\n    <div\n      style={{\n        marginTop: \"18px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <p\n        style={{\n          fontSize: \"14px\",\n        }}\n      >\n        Page {page} of {totalPages}\n      </p>\n      <div\n        style={{\n          display: \"flex\",\n        }}\n      >\n        <PrevBtn\n          page={page}\n          onClick={() => {\n            if (page > 1) prevPageHandler();\n          }}\n        />\n        <div\n          style={{\n            margin: \"0 8px\",\n            display: \"flex\",\n          }}\n        >\n          {pageButtons.map((pageNum, id) => {\n            return (\n              <Button\n                page={page}\n                pageNum={pageNum}\n                key={id}\n                onClick={() => {\n                  if (pageNum != \"...\") handler(pageNum);\n                }}\n              />\n            );\n          })}\n        </div>\n        <NextBtn\n          onClick={() => {\n            if (page < totalPages) nextPageHandler();\n          }}\n          page={page}\n          totalPages={totalPages}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Button({page,pageNum}) {\n  return (\n    <button\n      style={{\n        width: \"40px\",\n        height: \"40px\",\n        fontWeight: \"normal\",\n        border: \"none\",\n        borderRadius: \"6px\",\n        color: page == pageNum ? \"#3762DD\" : \"inherit\",\n        backgroundColor: page == pageNum ? \"#EDF1FF\" : \"inherit\",\n        fontSize: page == pageNum ? \"14px\" : \"inherit\",\n        cursor: \"pointer\",\n      }}\n    >\n      {pageNum}\n    </button>\n  );\n}\n","import React from \"react\";\n\nexport default function NextBtn({onClick,page,totalPages}) {\n  return (\n    <button\n      onClick={onClick}\n      style={{\n        height: \"38px\",\n        width: \"90px\",\n        backgroundColor: \"#fff\",\n        border: \"1px solid #D0D5DD\",\n        boxShadow: \"0px 1px 2px rgba(16, 24, 40, 0.05)\",\n        borderRadius: \"6px\",\n        fontSize: \"14px\",\n        fontWeight: \"normal\",\n        cursor: page >= totalPages ? \"not-allowed\" : \"pointer\",\n      }}\n    >\n      Next\n    </button>\n  );\n}\n","import React from \"react\";\n\nexport default function PrevBtn({onClick,page}) {\n  return (\n    <button\n      onClick={onClick}\n      style={{\n        height: \"38px\",\n        width: \"90px\",\n        backgroundColor: \"#fff\",\n        border: \"1px solid #D0D5DD\",\n        boxShadow: \"0px 1px 2px rgba(16, 24, 40, 0.05)\",\n        borderRadius: \"6px\",\n        fontSize: \"14px\",\n        fontWeight: \"normal\",\n        cursor: page <= 1 ? \"not-allowed\" : \"pointer\",\n      }}\n    >\n      Previous\n    </button>\n  );\n}\n","export { default as Pagination } from './Pagination.container'","import React from \"react\";\n\nexport const Pagination = React.createContext(null);\n\nexport const usePaginationContext = () => {\n    const context = React.useContext(Pagination);\n\n    if (!context) {\n        throw new Error(\"usePagination must only be used within its Provider\");\n    }\n\n    return context;\n};\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\n\\nimport { storiesOf } from \\\"@storybook/react\\\";\\n\\nimport {Pagination} from \\\"../components/Pagination\\\";\\n\\nconst stories = storiesOf(\\\"App Test\\\", module);\\n\\nstories.add(\\\"App\\\", () => {\\n  const [page,setPage] = React.useState(1)\\n  const setting = {\\n    Next : <Next/>,\\n    Prev: <Prev/>\\n  }\\n  return <Pagination setPage={setPage} page={page} totalPages={20} />;\\n});\\n\\nconst Next = () =>{\\n  return(\\n    <button>\\n      next\\n    </button>\\n  )\\n}\\n\\nconst Prev = () =>{\\n  return(\\n    <button>\\n      prev\\n    </button>\\n  )\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"app\":{\"startLoc\":{\"col\":12,\"line\":9},\"endLoc\":{\"col\":1,\"line\":16},\"startBody\":{\"col\":19,\"line\":9},\"endBody\":{\"col\":1,\"line\":16}}};\n    \nimport React from \"react\";\n\nimport { storiesOf } from \"@storybook/react\";\n\nimport {Pagination} from \"../components/Pagination\";\n\nconst stories = storiesOf(\"App Test\", module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } });\n\nstories.add(\"App\", () => {\n  const [page,setPage] = React.useState(1)\n  const setting = {\n    Next : <Next/>,\n    Prev: <Prev/>\n  }\n  return <Pagination setPage={setPage} page={page} totalPages={20} />;\n});\n\nconst Next = () =>{\n  return(\n    <button>\n      next\n    </button>\n  )\n}\n\nconst Prev = () =>{\n  return(\n    <button>\n      prev\n    </button>\n  )\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAIA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAcA;AA3DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAQA;AACA;AADA;AADA;AAAA;AAQA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAFA;AADA;AAOA;AAEA;AACA;AAEA;AACA;AACA;AANA;AASA;AAjBA;AAoBA;AACA;AACA;AACA;AACA;AALA;AA9BA;AAdA;AAsDA;AAjEA;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAAA;AAgBA;AAlBA;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAAA;AAiBA;AAnBA;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAAA;AAiBA;AAnBA;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAPA;AACA;AAOA;AACA;AACA;AAAA;AAIA;AACA;AAPA;;;;;A","sourceRoot":""}