{"version":3,"file":"main.1c4f9f93e40d6f5c1932.hot-update.js","sources":["webpack:///./src/components/Pagination/Pagination.container.jsx"],"sourcesContent":["import * as React from \"react\";\nimport Button from \"./components/Button\";\nimport NextBtn from \"./components/NextBtn\";\nimport PrevBtn from \"./components/PrevBtn\";\nimport PaginationView from \"./Pagination.view\";\nimport { Pagination } from \"./utils/context\";\nexport default function PaginationContainer({ page, setPage, totalPages, setting }) {\n  if (!totalPages || totalPages <= 1) return <></>;\n  const nextPageHandler = () => {\n    handler(page + 1);\n  };\n  const prevPageHandler = () => {\n    handler(page - 1);\n  };\n  const [pageButtons, setPageButtons] = React.useState([]);\n  React.useEffect(() => {\n    if (totalPages > 6) {\n      let arr = [];\n      if (page <= 2) arr = [1, 2, 3, \"...\", totalPages];\n      else if (page >= totalPages - 1)\n        arr = [1, \"...\", totalPages - 2, totalPages - 1, totalPages];\n      else {\n        if (page == 3) arr = [1, 2, 3, 4, \"...\", totalPages];\n        else if (page === totalPages - 2)\n          arr = [\n            1,\n            \"...\",\n            totalPages - 3,\n            totalPages - 2,\n            totalPages - 1,\n            totalPages,\n          ];\n        else {\n          arr = [1, \"...\", page - 1, page, page + 1, \"...\", totalPages];\n        }\n      }\n      setPageButtons(arr);\n    } else {\n      const arr = [];\n      Array.from({ length: totalPages }, (v, i) => i + 1).map((number) => {\n        arr.push(number);\n      });\n      setPageButtons(arr);\n    }\n  }, [page, totalPages]);\n\n  function handler(pageNum) {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n    setPage(pageNum);\n  }\n\n  const NextButton = setting?.NextButton ? setting?.NextButton: NextBtn\n  const PrevButton = setting?.PrevButton ? setting?.PrevButton: PrevBtn\n  const NumButton = setting?.NumberButton? setting?.NumberButton: Button\n\n  return (\n    <Pagination.Provider\n      value={{\n        page: page,\n        setPage: setPage,\n        totalPages: totalPages,\n        nextPageHandler: nextPageHandler,\n        prevPageHandler: prevPageHandler,\n        handler: handler,\n        pageButtons: pageButtons,\n        NextButton,\n        PrevButton,\n        NumButton\n      }}\n    >\n      <PaginationView />\n    </Pagination.Provider>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAIA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AADA;AAAA;AAiBA;AAnEA;;;;;;;;;;;;;;;;;A","sourceRoot":""}