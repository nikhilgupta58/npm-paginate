{"version":3,"file":"main.eeaa1714c60b552617d0.hot-update.js","sources":["webpack:///./src/components/Pagination/Pagination.container.jsx","webpack:///./src/components/Pagination/utils/context.js","webpack:///./src/stories/Pagination.stories.js"],"sourcesContent":["import * as React from \"react\";\nimport PaginationView from \"./Pagination.view\";\nimport { Pagination } from \"./utils/context\";\nexport default function PaginationContainer({ page, setPage, totalPages }) {\n  if (!totalPages || totalPages <= 1) return <></>;\n  const nextPageHandler = () => {\n    handler(page + 1);\n  };\n  const prevPageHandler = () => {\n    handler(page - 1);\n  };\n  const [pageButtons, setPageButtons] = React.useState([]);\n  React.useEffect(() => {\n    if (totalPages > 6) {\n      let arr = [];\n      if (page <= 2) arr = [1, 2, 3, \"...\", totalPages];\n      else if (page >= totalPages - 1)\n        arr = [1, \"...\", totalPages - 2, totalPages - 1, totalPages];\n      else {\n        if (page == 3) arr = [1, 2, 3, 4, \"...\", totalPages];\n        else if (page === totalPages - 2)\n          arr = [\n            1,\n            \"...\",\n            totalPages - 3,\n            totalPages - 2,\n            totalPages - 1,\n            totalPages,\n          ];\n        else {\n          arr = [1, \"...\", page - 1, page, page + 1, \"...\", totalPages];\n        }\n      }\n      setPageButtons(arr);\n    } else {\n      const arr = [];\n      Array.from({ length: totalPages }, (v, i) => i + 1).map((number) => {\n        arr.push(number);\n      });\n      setPageButtons(arr);\n    }\n  }, [page, totalPages]);\n\n  function handler(pageNum) {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n    setPage(pageNum);\n  }\n  return (\n    <Pagination.Provider\n      value={{\n        page: page,\n        setPage: setPage,\n        totalPages: totalPages,\n        nextPageHandler: nextPageHandler,\n        prevPageHandler: prevPageHandler,\n        handler: handler,\n        pageButtons: pageButtons,\n      }}\n    >\n      <PaginationView />\n    </Pagination.Provider>\n  );\n}\n","import React from \"react\";\n\nexport const Pagination = React.createContext(null);\n\nexport const usePaginationContext = () => {\n    const context = React.useContext(Pagination);\n\n    if (!context) {\n        throw new Error(\"usePagination must only be used within its Provider\");\n    }\n\n    return context;\n};\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\n\\nimport { storiesOf } from \\\"@storybook/react\\\";\\n\\nimport {Pagination} from \\\"../components/Pagination\\\";\\n\\nconst stories = storiesOf(\\\"App Test\\\", module);\\n\\nstories.add(\\\"App\\\", () => {\\n  const [page,setPage] = React.useState(1)\\n  return <Pagination setPage={setPage} page={page} totalPages={20} />;\\n});\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"app\":{\"startLoc\":{\"col\":12,\"line\":9},\"endLoc\":{\"col\":1,\"line\":12},\"startBody\":{\"col\":19,\"line\":9},\"endBody\":{\"col\":1,\"line\":12}}};\n    \nimport React from \"react\";\n\nimport { storiesOf } from \"@storybook/react\";\n\nimport {Pagination} from \"../components/Pagination\";\n\nconst stories = storiesOf(\"App Test\", module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } });\n\nstories.add(\"App\", () => {\n  const [page,setPage] = React.useState(1)\n  return <Pagination setPage={setPage} page={page} totalPages={20} />;\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAIA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAcA;AA3DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;A","sourceRoot":""}